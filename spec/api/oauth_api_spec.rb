=begin
#UltraCart Rest API V2

#This is the next generation UltraCart REST API...

OpenAPI spec version: 2.0.0
Contact: support@ultracart.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for UltraCartAdminV2::OauthApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'OauthApi' do
  before do
    # run before each test
    @instance = UltraCartAdminV2::OauthApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OauthApi' do
    it 'should create an instact of OauthApi' do
      expect(@instance).to be_instance_of(UltraCartAdminV2::OauthApi)
    end
  end

  # unit tests for oauth_access_token
  # Exchange authorization code for access token.
  # The final leg in the OAuth process which exchanges the specified access token for the access code needed to make API calls. 
  # @param client_id The OAuth application client_id.
  # @param grant_type Type of grant
  # @param [Hash] opts the optional parameters
  # @option opts [String] :code Authorization code received back from the browser redirect
  # @option opts [String] :redirect_uri The URI that you redirect the browser to to start the authorization process
  # @option opts [String] :refresh_token The refresh token received during the original grant_type&#x3D;authorization_code that can be used to return a new access token
  # @return [OauthTokenResponse]
  describe 'oauth_access_token test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for oauth_revoke
  # Revoke this OAuth application.
  # Revokes the OAuth application associated with the specified client_id and token. 
  # @param client_id The OAuth application client_id.
  # @param token The OAuth access token that is to be revoked..
  # @param [Hash] opts the optional parameters
  # @return [OauthRevokeSuccessResponse]
  describe 'oauth_revoke test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
