=begin
#UltraCart Rest API V2

#UltraCart REST API Version 2

OpenAPI spec version: 2.0.0
Contact: support@ultracart.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for UltraCartAdminV2::TaxApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TaxApi' do
  before do
    # run before each test
    @instance = UltraCartAdminV2::TaxApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TaxApi' do
    it 'should create an instact of TaxApi' do
      expect(@instance).to be_instance_of(UltraCartAdminV2::TaxApi)
    end
  end

  # unit tests for delete_tax_provider_self_city
  # Deletes a Self tax provider city
  # Deletes a Self tax provider city. 
  # @param city The city being deleted.
  # @param tax_city tax city to be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_tax_provider_self_city test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tax_provider_self_country
  # Deletes a Self tax provider country
  # Deletes a Self tax provider country. 
  # @param country_code The country code being deleted.
  # @param tax_country tax country to be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_tax_provider_self_country test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tax_provider_self_county
  # Deletes a Self tax provider county
  # Deletes a Self tax provider county. 
  # @param county The county being deleted.
  # @param tax_county tax county to be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_tax_provider_self_county test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tax_provider_self_postal_code
  # Deletes a Self tax provider postalCode
  # Deletes a Self tax provider postalCode. 
  # @param postal_code The postal code being deleted.
  # @param tax_postal_code tax postal code to be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_tax_provider_self_postal_code test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tax_provider_self_state
  # Deletes a Self tax provider state
  # Deletes a Self tax provider state. 
  # @param state_code The state code being deleted.
  # @param tax_state tax state to be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_tax_provider_self_state test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tax_provider_avalara
  # Retrieve the Avalara tax provider
  # Retrieves the Avalara tax provider. 
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderAvalara]
  describe 'get_tax_provider_avalara test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tax_provider_avalara_companies
  # Returns Avalara Tax companies configured by the merchant
  # Returns Avalara Tax companies configured by the merchant 
  # @param tax_provider_avalara TaxProviderAvalara object
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderAvalaraCompaniesResult]
  describe 'get_tax_provider_avalara_companies test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tax_provider_avalara_test
  # Attempts to connect to Avalara and returns back the response
  # Attempts to connect to Avalara and returns back the response. 
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderTestResult]
  describe 'get_tax_provider_avalara_test test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tax_provider_self
  # Retrieve the Self tax provider
  # Retrieves the Self tax provider. 
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderSelf]
  describe 'get_tax_provider_self test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tax_provider_self_countries
  # Retrieve the Self tax provider countries
  # Retrieves the Self tax provider countries. 
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderSelfCountriesResponse]
  describe 'get_tax_provider_self_countries test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tax_provider_self_regions_by_country_code
  # Retrieve the Self tax provider regions for a given country code
  # Retrieves the Self tax provider regions for a given country code. 
  # @param country_code The country code regions desired.
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderSelfRegionsResponse]
  describe 'get_tax_provider_self_regions_by_country_code test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tax_provider_tax_jar
  # Retrieve the TaxJar tax provider
  # Retrieves the TaxJar tax provider. 
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderTaxJar]
  describe 'get_tax_provider_tax_jar test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tax_provider_tax_jar_test
  # Attempts to connect to TaxJar and returns back the response
  # Attempts to connect to TaxJar and returns back the response. 
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderTestResult]
  describe 'get_tax_provider_tax_jar_test test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tax_provider_ultra_cart
  # Retrieve the UltraCart tax provider
  # Retrieves the UltraCart tax provider. 
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderUltraCart]
  describe 'get_tax_provider_ultra_cart test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tax_providers
  # Retrieve tax methods
  # Retrieves tax methods for this account. 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :_limit The maximum number of records to return on this one API call. (Max 200)
  # @option opts [Integer] :_offset Pagination of the record set.  Offset is a zero based index.
  # @option opts [String] :_expand The object expansion to perform on the result.  See documentation for examples
  # @return [TaxProvidersResponse]
  describe 'get_tax_providers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_active_tax_provider
  # Toggle a tax provider to active
  # Toggle a tax provider to active. 
  # @param provider_name The tax provider to set active.
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderActivateResult]
  describe 'set_active_tax_provider test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_tax_provider_avalara
  # Update the Avalara tax provider
  # Update the Avalara tax provider. 
  # @param tax_provider_avalara TaxProviderAvalara object
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderAvalara]
  describe 'update_tax_provider_avalara test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_tax_provider_self
  # Update the Self tax provider
  # Update the Self tax provider. 
  # @param tax_provider_self TaxProviderSelf object
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderSelf]
  describe 'update_tax_provider_self test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_tax_provider_self_city
  # Updates a Self tax provider city
  # Updates a Self tax provider city. 
  # @param city The city being updated.
  # @param tax_city tax city to be updated
  # @param [Hash] opts the optional parameters
  # @return [TaxCity]
  describe 'update_tax_provider_self_city test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_tax_provider_self_country
  # Updates a Self tax provider country
  # Updates a Self tax provider country. 
  # @param country_code The country code being updated.
  # @param tax_country tax country to be updated
  # @param [Hash] opts the optional parameters
  # @return [TaxCountry]
  describe 'update_tax_provider_self_country test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_tax_provider_self_county
  # Updates a Self tax provider county
  # Updates a Self tax provider county. 
  # @param county The county being updated.
  # @param tax_county tax county to be updated
  # @param [Hash] opts the optional parameters
  # @return [TaxCounty]
  describe 'update_tax_provider_self_county test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_tax_provider_self_postal_code
  # Updates a Self tax provider postalCode
  # Updates a Self tax provider postalCode. 
  # @param postal_code The postal code being updated.
  # @param tax_postal_code tax postal code to be updated
  # @param [Hash] opts the optional parameters
  # @return [TaxPostalCode]
  describe 'update_tax_provider_self_postal_code test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_tax_provider_self_state
  # Updates a Self tax provider state
  # Updates a Self tax provider state. 
  # @param state_code The state code being updated.
  # @param tax_state tax state to be updated
  # @param [Hash] opts the optional parameters
  # @return [TaxState]
  describe 'update_tax_provider_self_state test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_tax_provider_tax_jar
  # Update the TaxJar tax provider
  # Update the TaxJar tax provider. 
  # @param tax_provider_tax_jar TaxProviderTaxJar object
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderTaxJar]
  describe 'update_tax_provider_tax_jar test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_tax_provider_ultra_cart
  # Update the UltraCart tax provider
  # Update the UltraCart tax provider. 
  # @param tax_provider_ultracart TaxProviderUltraCart object
  # @param [Hash] opts the optional parameters
  # @return [TaxProviderUltraCart]
  describe 'update_tax_provider_ultra_cart test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
