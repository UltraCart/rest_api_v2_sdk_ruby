=begin
#UltraCart Rest API V2

#UltraCart REST API Version 2

OpenAPI spec version: 2.0.0
Contact: support@ultracart.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for UltraCartAdminV2::CouponApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CouponApi' do
  before do
    # run before each test
    @instance = UltraCartAdminV2::CouponApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CouponApi' do
    it 'should create an instact of CouponApi' do
      expect(@instance).to be_instance_of(UltraCartAdminV2::CouponApi)
    end
  end

  # unit tests for delete_coupon
  # Delete a coupon
  # Delete a coupon on the UltraCart account. 
  # @param coupon_oid The coupon_oid to delete.
  # @param [Hash] opts the optional parameters
  # @return [CouponResponse]
  describe 'delete_coupon test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_coupon_codes
  # Generates one time codes for a coupon
  # Generate one time codes for a coupon 
  # @param coupon_oid The coupon oid to generate codes.
  # @param coupon_codes_request Coupon code generation parameters
  # @param [Hash] opts the optional parameters
  # @return [CouponCodesResponse]
  describe 'generate_coupon_codes test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_one_time_codes_by_merchant_code
  # Generates one time codes by merchant code
  # Generate one time codes by merchant code 
  # @param merchant_code The merchant code to generate one time codes.
  # @param coupon_codes_request Coupon code generation parameters
  # @param [Hash] opts the optional parameters
  # @return [CouponCodesResponse]
  describe 'generate_one_time_codes_by_merchant_code test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupon
  # Retrieve a coupon
  # Retrieves a single coupon using the specified coupon profile oid. 
  # @param coupon_oid The coupon oid to retrieve.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :_expand The object expansion to perform on the result.  See documentation for examples
  # @return [CouponResponse]
  describe 'get_coupon test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupon_by_merchant_code
  # Retrieve a coupon by merchant code
  # Retrieves a single coupon using the specified merchant code. 
  # @param merchant_code The coupon merchant code to retrieve.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :_expand The object expansion to perform on the result.  See documentation for examples
  # @return [CouponResponse]
  describe 'get_coupon_by_merchant_code test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupons
  # Retrieve coupons
  # Retrieves coupons for this account.  If no parameters are specified, all coupons will be returned.  You will need to make multiple API calls in order to retrieve the entire result set since this API performs result set pagination. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :merchant_code Merchant code
  # @option opts [String] :description Description
  # @option opts [String] :coupon_type Coupon type
  # @option opts [String] :start_date_begin Start date begin
  # @option opts [String] :start_date_end Start date end
  # @option opts [String] :expiration_date_begin Expiration date begin
  # @option opts [String] :expiration_date_end Expiration date end
  # @option opts [Integer] :affiliate_oid Affiliate oid
  # @option opts [BOOLEAN] :exclude_expired Exclude expired
  # @option opts [Integer] :_limit The maximum number of records to return on this one API call. (Max 200)
  # @option opts [Integer] :_offset Pagination of the record set.  Offset is a zero based index.
  # @option opts [String] :_sort The sort order of the coupons.  See Sorting documentation for examples of using multiple values and sorting by ascending and descending.
  # @option opts [String] :_expand The object expansion to perform on the result.  See documentation for examples
  # @return [CouponsResponse]
  describe 'get_coupons test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupons_by_query
  # Retrieve coupons by query
  # Retrieves coupons from the account.  If no parameters are specified, all coupons will be returned.  You will need to make multiple API calls in order to retrieve the entire result set since this API performs result set pagination. 
  # @param coupon_query Coupon query
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :_limit The maximum number of records to return on this one API call. (Max 200)
  # @option opts [Integer] :_offset Pagination of the record set.  Offset is a zero based index.
  # @option opts [String] :_sort The sort order of the coupons.  See Sorting documentation for examples of using multiple values and sorting by ascending and descending.
  # @option opts [String] :_expand The object expansion to perform on the result.  See documentation for examples
  # @return [CouponsResponse]
  describe 'get_coupons_by_query test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_editor_values
  # Retrieve values needed for a coupon editor
  # Retrieve values needed for a coupon editor 
  # @param [Hash] opts the optional parameters
  # @return [CouponEditorValues]
  describe 'get_editor_values test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for insert_coupon
  # Insert a coupon
  # Insert a coupon on the UltraCart account. 
  # @param coupon Coupon to insert
  # @param [Hash] opts the optional parameters
  # @option opts [String] :_expand The object expansion to perform on the result.  See documentation for examples
  # @return [CouponResponse]
  describe 'insert_coupon test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_coupon
  # Update a coupon
  # Update a coupon on the UltraCart account. 
  # @param coupon Coupon to update
  # @param coupon_oid The coupon_oid to update.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :_expand The object expansion to perform on the result.  See documentation for examples
  # @return [CouponResponse]
  describe 'update_coupon test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
