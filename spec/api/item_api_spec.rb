=begin
#UltraCart Rest API V2

#This is the next generation UltraCart REST API...

OpenAPI spec version: 2.0.0
Contact: support@ultracart.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for UltraCartAdminV2::ItemApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ItemApi' do
  before do
    # run before each test
    @instance = UltraCartAdminV2::ItemApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ItemApi' do
    it 'should create an instact of ItemApi' do
      expect(@instance).to be_instance_of(UltraCartAdminV2::ItemApi)
    end
  end

  # unit tests for item_items_get
  # Retrieve items
  # Retrieves a group of items from the account.  If no parameters are specified, all items will be returned. 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :parent_category_id The parent category to retrieve items for.  Unspecified means all items on the account.  0 &#x3D; root
  # @return [ItemsResponse]
  describe 'item_items_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for item_items_merchant_item_oid_delete
  # Delete an item
  # Delete an item on the UltraCart account. 
  # @param merchant_item_oid The item oid to delete.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'item_items_merchant_item_oid_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for item_items_merchant_item_oid_get
  # Retrieve an item
  # Retrieves a single item using the specified item oid. 
  # @param merchant_item_oid The item oid to retrieve.
  # @param [Hash] opts the optional parameters
  # @return [ItemResponse]
  describe 'item_items_merchant_item_oid_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for item_items_merchant_item_oid_put
  # Update an item
  # Update a new item on the UltraCart account. 
  # @param item Item to create
  # @param merchant_item_oid The item oid to update.
  # @param [Hash] opts the optional parameters
  # @return [ItemResponse]
  describe 'item_items_merchant_item_oid_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for item_items_post
  # Create an item
  # Create a new item on the UltraCart account. 
  # @param item Item to create
  # @param [Hash] opts the optional parameters
  # @return [ItemResponse]
  describe 'item_items_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for item_temp_multimedia_post
  # Upload an image to the temporary multimedia.
  # Uploads an image and returns back meta information about the image as well as the identifier needed for the item update. 
  # @param file File to upload
  # @param [Hash] opts the optional parameters
  # @return [TempMultimediaResponse]
  describe 'item_temp_multimedia_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
