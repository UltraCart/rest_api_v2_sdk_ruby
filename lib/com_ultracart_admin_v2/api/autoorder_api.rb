=begin
#UltraCart Rest API V2

#This is the next generation UltraCart REST API...

OpenAPI spec version: 2.0.0
Contact: support@ultracart.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module UltraCartAdminV2
  class AutoorderApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Retrieve an auto order
    # Retrieves a single auto order using the specified auto order oid. 
    # @param auto_order_oid The auto order oid to retrieve.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :_expand The object expansion to perform on the result.  See documentation for examples
    # @return [AutoOrderResponse]
    def auto_order_auto_orders_auto_order_oid_get(auto_order_oid, opts = {})
      data, _status_code, _headers = auto_order_auto_orders_auto_order_oid_get_with_http_info(auto_order_oid, opts)
      return data
    end

    # Retrieve an auto order
    # Retrieves a single auto order using the specified auto order oid. 
    # @param auto_order_oid The auto order oid to retrieve.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :_expand The object expansion to perform on the result.  See documentation for examples
    # @return [Array<(AutoOrderResponse, Fixnum, Hash)>] AutoOrderResponse data, response status code and response headers
    def auto_order_auto_orders_auto_order_oid_get_with_http_info(auto_order_oid, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: AutoorderApi.auto_order_auto_orders_auto_order_oid_get ..."
      end
      # verify the required parameter 'auto_order_oid' is set
      fail ArgumentError, "Missing the required parameter 'auto_order_oid' when calling AutoorderApi.auto_order_auto_orders_auto_order_oid_get" if auto_order_oid.nil?
      # resource path
      local_var_path = "/auto_order/auto_orders/{auto_order_oid}".sub('{format}','json').sub('{' + 'auto_order_oid' + '}', auto_order_oid.to_s)

      # query parameters
      query_params = {}
      query_params[:'_expand'] = opts[:'_expand'] if !opts[:'_expand'].nil?

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['ultraCartOauth', 'ultraCartSimpleApiKey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AutoOrderResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AutoorderApi#auto_order_auto_orders_auto_order_oid_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update an auto order
    # Update an auto order on the UltraCart account. 
    # @param auto_order Auto order to update
    # @param auto_order_oid The auto order oid to update.
    # @param [Hash] opts the optional parameters
    # @return [AutoOrderResponse]
    def auto_order_auto_orders_auto_order_oid_put(auto_order, auto_order_oid, opts = {})
      data, _status_code, _headers = auto_order_auto_orders_auto_order_oid_put_with_http_info(auto_order, auto_order_oid, opts)
      return data
    end

    # Update an auto order
    # Update an auto order on the UltraCart account. 
    # @param auto_order Auto order to update
    # @param auto_order_oid The auto order oid to update.
    # @param [Hash] opts the optional parameters
    # @return [Array<(AutoOrderResponse, Fixnum, Hash)>] AutoOrderResponse data, response status code and response headers
    def auto_order_auto_orders_auto_order_oid_put_with_http_info(auto_order, auto_order_oid, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: AutoorderApi.auto_order_auto_orders_auto_order_oid_put ..."
      end
      # verify the required parameter 'auto_order' is set
      fail ArgumentError, "Missing the required parameter 'auto_order' when calling AutoorderApi.auto_order_auto_orders_auto_order_oid_put" if auto_order.nil?
      # verify the required parameter 'auto_order_oid' is set
      fail ArgumentError, "Missing the required parameter 'auto_order_oid' when calling AutoorderApi.auto_order_auto_orders_auto_order_oid_put" if auto_order_oid.nil?
      # resource path
      local_var_path = "/auto_order/auto_orders/{auto_order_oid}".sub('{format}','json').sub('{' + 'auto_order_oid' + '}', auto_order_oid.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json; charset=UTF-8']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(auto_order)
      auth_names = ['ultraCartOauth', 'ultraCartSimpleApiKey']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AutoOrderResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AutoorderApi#auto_order_auto_orders_auto_order_oid_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve auto orders
    # Retrieves auto orders from the account.  If no parameters are specified, all auto orders will be returned.  You will need to make multiple API calls in order to retrieve the entire result set since this API performs result set pagination. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :auto_order_code Auto order code
    # @option opts [String] :original_order_id Original order id
    # @option opts [String] :first_name First name
    # @option opts [String] :last_name Last name
    # @option opts [String] :company Company
    # @option opts [String] :city City
    # @option opts [String] :state State
    # @option opts [String] :postal_code Postal code
    # @option opts [String] :country_code Country code (ISO-3166 two letter)
    # @option opts [String] :phone Phone
    # @option opts [String] :email Email
    # @option opts [String] :original_order_date_begin Original order date begin
    # @option opts [String] :original_order_date_end Original order date end
    # @option opts [String] :next_shipment_date_begin Next shipment date begin
    # @option opts [String] :next_shipment_date_end Next shipment date end
    # @option opts [String] :card_type Card type
    # @option opts [String] :item_id Item ID
    # @option opts [String] :status Status
    # @option opts [Integer] :_limit The maximum number of records to return on this one API call. (Max 200) (default to 100)
    # @option opts [Integer] :_offset Pagination of the record set.  Offset is a zero based index. (default to 0)
    # @option opts [String] :_since Fetch auto orders that have been created/modified since this date/time.
    # @option opts [String] :_sort The sort order of the items.  See Sorting documentation for examples of using multiple values and sorting by ascending and descending.
    # @option opts [String] :_expand The object expansion to perform on the result.  See documentation for examples
    # @return [AutoOrdersResponse]
    def auto_order_auto_orders_get(opts = {})
      data, _status_code, _headers = auto_order_auto_orders_get_with_http_info(opts)
      return data
    end

    # Retrieve auto orders
    # Retrieves auto orders from the account.  If no parameters are specified, all auto orders will be returned.  You will need to make multiple API calls in order to retrieve the entire result set since this API performs result set pagination. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :auto_order_code Auto order code
    # @option opts [String] :original_order_id Original order id
    # @option opts [String] :first_name First name
    # @option opts [String] :last_name Last name
    # @option opts [String] :company Company
    # @option opts [String] :city City
    # @option opts [String] :state State
    # @option opts [String] :postal_code Postal code
    # @option opts [String] :country_code Country code (ISO-3166 two letter)
    # @option opts [String] :phone Phone
    # @option opts [String] :email Email
    # @option opts [String] :original_order_date_begin Original order date begin
    # @option opts [String] :original_order_date_end Original order date end
    # @option opts [String] :next_shipment_date_begin Next shipment date begin
    # @option opts [String] :next_shipment_date_end Next shipment date end
    # @option opts [String] :card_type Card type
    # @option opts [String] :item_id Item ID
    # @option opts [String] :status Status
    # @option opts [Integer] :_limit The maximum number of records to return on this one API call. (Max 200)
    # @option opts [Integer] :_offset Pagination of the record set.  Offset is a zero based index.
    # @option opts [String] :_since Fetch auto orders that have been created/modified since this date/time.
    # @option opts [String] :_sort The sort order of the items.  See Sorting documentation for examples of using multiple values and sorting by ascending and descending.
    # @option opts [String] :_expand The object expansion to perform on the result.  See documentation for examples
    # @return [Array<(AutoOrdersResponse, Fixnum, Hash)>] AutoOrdersResponse data, response status code and response headers
    def auto_order_auto_orders_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: AutoorderApi.auto_order_auto_orders_get ..."
      end
      # resource path
      local_var_path = "/auto_order/auto_orders".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'auto_order_code'] = opts[:'auto_order_code'] if !opts[:'auto_order_code'].nil?
      query_params[:'original_order_id'] = opts[:'original_order_id'] if !opts[:'original_order_id'].nil?
      query_params[:'first_name'] = opts[:'first_name'] if !opts[:'first_name'].nil?
      query_params[:'last_name'] = opts[:'last_name'] if !opts[:'last_name'].nil?
      query_params[:'company'] = opts[:'company'] if !opts[:'company'].nil?
      query_params[:'city'] = opts[:'city'] if !opts[:'city'].nil?
      query_params[:'state'] = opts[:'state'] if !opts[:'state'].nil?
      query_params[:'postal_code'] = opts[:'postal_code'] if !opts[:'postal_code'].nil?
      query_params[:'country_code'] = opts[:'country_code'] if !opts[:'country_code'].nil?
      query_params[:'phone'] = opts[:'phone'] if !opts[:'phone'].nil?
      query_params[:'email'] = opts[:'email'] if !opts[:'email'].nil?
      query_params[:'original_order_date_begin'] = opts[:'original_order_date_begin'] if !opts[:'original_order_date_begin'].nil?
      query_params[:'original_order_date_end'] = opts[:'original_order_date_end'] if !opts[:'original_order_date_end'].nil?
      query_params[:'next_shipment_date_begin'] = opts[:'next_shipment_date_begin'] if !opts[:'next_shipment_date_begin'].nil?
      query_params[:'next_shipment_date_end'] = opts[:'next_shipment_date_end'] if !opts[:'next_shipment_date_end'].nil?
      query_params[:'card_type'] = opts[:'card_type'] if !opts[:'card_type'].nil?
      query_params[:'item_id'] = opts[:'item_id'] if !opts[:'item_id'].nil?
      query_params[:'status'] = opts[:'status'] if !opts[:'status'].nil?
      query_params[:'_limit'] = opts[:'_limit'] if !opts[:'_limit'].nil?
      query_params[:'_offset'] = opts[:'_offset'] if !opts[:'_offset'].nil?
      query_params[:'_since'] = opts[:'_since'] if !opts[:'_since'].nil?
      query_params[:'_sort'] = opts[:'_sort'] if !opts[:'_sort'].nil?
      query_params[:'_expand'] = opts[:'_expand'] if !opts[:'_expand'].nil?

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['ultraCartOauth', 'ultraCartSimpleApiKey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AutoOrdersResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AutoorderApi#auto_order_auto_orders_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
